ANSIBLE
=======

Command Syntax:
===============
	ansible --version|--help
	ansible [-i INVENTORY] [-v] --list-hosts HOST_PATTERN
	ansible [-i INVENTORY] HOST_PATTERN [-m MODULE] {-a "<ARGS>..."} [-b] [-k] [-u REMOTE_USER] \
		[--become-method su|sudo|enable|runas] [-K] [--become-user USER] [-f FORKS] [-v] \
		[-e <VAR>=<VALUE>]...
	
		Eg. ansible -i myinventory servera -m yum -a "name=httpd state=latest"

	
	ansible-playbook [-i INVENTORY] [-b] [-k] [-u REMOTE_USER] [--vault-password-file PASSFILE]\
		[--become-method su|sudo|enable|runas] [-K] [--become-user USER] [-f FORKS] \
		[-v] [--syntax-check] [-C] [--list-tasks] [-e <VAR>=<VALUE>]... PLAYBOOK

	ansible-inventory [-i INVENTORY] [--graph|--list] [-y]

	ansible-doc [-t TYPE] -l|MODULE_NAME
	
		Eg. ansible-doc -t connection -l
		    ansible-doc -t callback -l
		    ansible-doc yum

	ansible-vault create|edit|encrypt|decrypt|view|rekey [--vault-password-file PASSFILE] FILENAME

	ansible-galaxy init|install ROLE_NAME

Config
======
	Precedence
	----------
	1. ANSIBLE_CONFIG 			# environment variable, file name anything ref by var.
	2. ./ansible.cfg			# current directory, file name ansible.cfg
	3. ~/.ansible.cfg			# home directory, file name .ansible.cfg
	4. /etc/ansible/ansible.cfg		# default

	Sample ansible.cfg
	------------------
	[defaults]
	inventory         = ./hosts
	roles_path        = ./roles
	log_path          = ./logs/report.log
	remote_user       = devops
	ask_pass          = False		# true|False
	host_key_checking = False		# True|false
	gathering         = smart		# Smart|implicit|explicit
						# Refer to /etc/ansible/ansible.cfg
	forks             = 5
	transport	  = smart		# Smart|network_cli. TIP: use play level or host vars to set instead
	retry_files_enabled = False		# true|False(default in 2.9)
	stdout_callback   = yaml		# formats output. ansible-doc -t callback -l

	[privilege_escalation]
	become          = False			# true|False
	become_user     = root
	become_ask_pass = False			# true|False
	become_method   = su|sudo|enable|runas	# *nix - su,sudo; win - runas; ntdev - enable
						# ansible-doc -t become -l

Variables - Scope & precedence
==============================
	      Precedence                        Scope                          Validity
	      ----------                        -----                          --------
	GLOBAL                                                                 per playbook
	      - Cmd line options (-e)           PLAYBOOK
	      - Config                          PLAYBOOK
	PLAYBOOK                                                               per play
	      - include_vars module in tasks    PLAY (from the module declaration onwards)
	      - vars under tasks                TASK
	      - vars_files under play           PLAY
	      - vars under play                 PLAY
	HOST                                                                   per host
	      - host_vars in project            PLAYBOOK
	      - group_vars in project           PLAYBOOK
	      - host_var in inventory           PLAYBOOK
	      - group_vars in inventory         PLAYBOOK
	
	Where SCOPE,
	  PLAYBOOK = variables can be used anywhere in Playbook
	  PLAY     = variables can only be used in PLAY where it is declared
	  TASK     = variables can only be used in the TASK where it is declared

	{group,host}_vars directories to hold variables for group/host
			  filenames would follow the group/host names.

Important Variables
===================
	ansible_user: <USERNAME>
	ansible_password: <PASSWORD>
	ansible_become: true|FALSE
	ansible_become_method: enable|sudo|su|runas     # enable - ntwk dev, sudo/su - *nix(linux/unix), runas - win
	ansible_host: <IP ADDRESS|FQDN>
	
	Network Devices
	---------------
	ansible_connection: network_cli|netconf         # transport=network_cli in defaults section of ansible.cfg OR
							# connection in play level OR ansible_connection in host vars.
	ansible_network_os: ios|vyos|eos|...


Magic Variables
===============
	inventory_hostname	# the inventory host name
	group_names		# groups the inventory host belong to
	groups			# all groups of the inventory as well as their members
	hostvars		# all inventory variables

		Eg.
		Assuming you're inside servera now, to refer to it's own groups magic var:
			hostvars.servera.groups OR
			hostvars['servera'].['groups'] OR
			groups
		Structure of hostvars is as below:

		hostvars:
			servera:
				inventory_hostname: servera	# each host has it's magic var
				group_names:
					- webservers
					- nodes
				groups:
					all:
						- monkey
						- servera
						- serverb
					nodes:
						- servera
						- serverb
					webservers:
						- servera
					dbservers:
						- serverb
					ungrouped:
						- monkey
				ansible_facts: {}
			serverb:
				inventory_hostname: serverb
				...

Playbook Syntax
===============
	---                               # start of YAML (optional)
	- name: <PLAY_NAME>
	  hosts: <HOSTS_LIST>
	  become: true|FALSE              # precedence: play overrides ansible.cfg
	  gather_facts: TRUE|false        # normally when dealing with network devices set this to FALSE
	  ignore_errors: true|FALSE       # not advisable
	  force_handlers: true|FALSE
	  connection: <PLUGIN>            # overrides transport in default section of ansible.cfg
	  serial: <NUM_OF_HOSTS>          # number of hosts to run per play
	  vars:
	    <KEY>: <VALUE>
	  vars_files:
	    - <FILE_LIST>                 # higher priority over the vars
	  pre_tasks:
	    - name: <TASK NAME>
	      <SAME-AS-TASK-SECTION>
	  roles:
	    - <ROLE_NAME>
	    - role: <ROLE_NAME>           # can be written as
	      <KEY>: <VALUE>              # - { role: <ROLE_NAME>, <VAR>: <VALUE>, ...}
	  tasks:
	    - name: <TASK_NAME>                 ────┐
	      vars:                                 │
		<VAR>: <VALUE>                      │
	      <MODULE>:                             │   # 1 task CAN ONLY USE 1 MODULE
		<MODULE_OPT>: <VALUE>               │
	      register: <VARIABLE>                  │
	      ignore_errors: true|FALSE             │<TASK-SECTION>
	      when: <CONDITION_LIST>                │
	      failed_when: <CONDITION_LIST>         │
	      changed_when: <CONDITION_LIST>        │
	      loop: <CONDITION_LIST>                │
	      notify: <HANDLER_LIST>                │
	      delegate_to: <HOST_NAME>              │
	      delegate_facts: true|FALSE            │
	      tags: <TAG_LIST>                  ────┘

	    - block:                            ────┐
		- name: <TASK_NAME>                 │
		  <SAME-AS-TASK-SECTION>            │
	      rescue:                               │
		- name: <TASK_NAME>                 │
		  <SAME-AS-TASK-SECTION>            │<BLOCK-SECTION>
	      always:                               │
		- name: <TASK_NAME>                 │
		  <SAME-AS-TASK-SECTION>            │
	      when: <CONDITION_LIST>            ────┘ # block can only use conditions but not loop

	    - name: <TASK NAME>
	      <SAME-AS-TASK-SECTION>

	  post_tasks:
	    - name: <TASK NAME>
	      <SAME-AS-TASK-SECTION>

	  handlers:
	    - name: <HANDLER_NAME>
	      <SAME-AS-TASK-SECTION>

	- name: <PLAY NAME>
	  hosts: <HOSTS_LIST>
	...                               # end of YAML (optional)

HANDLERS
========
	RULES
	-----
	Handlers will only execute:
		1. The task that notified the handler has a status of "changed"
		2. In the order defined, and not the notified order.
		3. Once regardless of how many times it was notified.
		4. After ALL TASKS have completed for the PLAY.
		      EXCEPTION - force_handlers: true
		      EXCEPTION - calling to meta module with flush_handlers argument as one of the tasks.
		        - name: running notified handlers
		          meta: flush_handlers
		5. In their own namespace. (You can't notify a playbooks handler from inside a role and vice versa)
	
	Handlers will execute based on the above rules each time for pre_tasks, tasks and post_tasks.
		1. pre_tasks
		2.   handlers
		3. roles
		4. tasks
		5.   handlers
		6. post_tasks
		7.   handlers

	
Extras
======
	Ansible Config Settings - https://docs.ansible.com/ansible/latest/reference_appendices/config.html
	Playbook Keywords - https://docs.ansible.com/ansible/latest/reference_appendices/playbooks_keywords.html
	Playbook Filters  - https://docs.ansible.com/ansible/latest/user_guide/playbooks_filters.html

vi settings
===========
	autocmd FileType yaml setlocal ai ts=2 et sw=2 sts=2 colorcolumn=3,5 nu
